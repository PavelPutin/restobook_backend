server:
  port: 8181
  servlet:
    context-path: /restobook-api

spring:
  application.name: restobook_backend
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOSTNAME}:5432/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  jpa:
    properties:
      hibernate:
        jdbc.lob.non_contextual_creation: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
  flyway:
    user: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    url: jdbc:postgresql://${POSTGRES_HOSTNAME}:5432/${POSTGRES_DB}
    schemas: public
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_URL}/realms/${KEYCLOAK_REALM}
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

  jwt:
    auth:
      converter:
        resource-id: restobook-rest-api
        principle-attribute: preferred_username

keycloak:
  url: ${KEYCLOAK_URL}
  realm: ${KEYCLOAK_REALM}
  clientId: ${KEYCLOAK_CLIENT_ID}
  clientSecret: ${KEYCLOAK_CLIENT_SECRET}
  username: ${KEYCLOAK_API_USER}
  password: ${KEYCLOAK_API_USER_PASSWORD}
